class Dungeon

  Banana1 = 10
  Banana2 = 25
  Banana3 = 60

  attr_reader :field_size

  def initialize
    @players    = {}
    @field_size = 65
  end

  def self.instance
    @instance ||= new
  end

  def find_player user_id
    @players[user_id]
  end

  def add_player player
    @players[player.user.id] = player
    player.food_points = 0
  end

  def fields
    [
      ['X', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', 'X'],
      ['X', '2', '.', 'X', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.', 'x', 'X', '.', '.', '.', '.', 'X', 'x', 'X'],
      ['X', '.', '.', 'X', 'X', '1', '.', 'X', 'X', 'X', '.', 'X', 'X', 'X', '.', '.', '3', 'X', 'X', 'X', '.', '.', 'X', '2', 'X'],
      ['X', '.', 'R', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', 'X', 'X', 'x', '.', '.', '.', '.', '.', '.', 'X'],
      ['X', 'X', 'X', '.', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'x', '.', 'X', 'R', '.', '.', '.', '.', '.', '.', 'X', '.', '.', 'X'],
      ['X', 'x', 'X', '.', '.', 'X', '3', '.', 'X', '.', '.', 'X', '.', '2', '.', '1', 'X', 'X', '.', '.', 'X', 'X', '.', '.', 'X'],
      ['.', '.', 'X', '.', '.', '.', '.', '.', 'X', '.', '.', 'X', '.', '.', '.', '.', '.', 'X', '.', '.', 'X', '.', '.', '.', '.'],
      ['X', '.', 'X', '.', '.', 'X', '.', '.', '.', '.', 'R', '.', '.', 'X', '.', '.', '.', 'X', '.', '1', 'X', '.', '.', '.', 'X'],
      ['X', '.', '.', '.', 'X', 'X', '.', 'X', '.', '.', 'X', 'X', 'X', 'X', 'X', 'X', '.', '.', '.', '.', '.', '.', 'L', '.', 'X'],
      ['X', '1', 'X', '.', '.', '.', '.', 'X', '1', '.', '.', 'X', '1', '.', '.', 'X', '.', '.', '.', '.', '.', '.', 'X', 'X', 'X'],
      ['X', '.', 'X', 'X', '.', '.', 'X', 'X', 'X', 'X', '.', '.', '.', '.', '.', '.', '.', 'X', 'X', 'X', '.', '.', 'X', '3', 'X'],
      ['X', '.', '.', '.', '.', '.', '.', 'X', '.', '.', 'R', '.', '.', 'X', 'X', '.', '.', '.', 'X', '.', '.', '.', 'X', '.', 'X'],
      ['.', '.', '.', 'X', 'X', '.', '.', '.', '.', 'X', 'X', '.', '.', '.', 'X', 'X', 'X', '.', 'X', '.', 'R', '.', '.', '.', '.'],
      ['X', '.', '.', '.', 'X', '.', 'x', 'X', '.', '.', 'X', '.', '.', '.', 'X', '.', '.', '.', 'X', '.', 'X', 'X', '.', '.', 'X'],
      ['X', '2', '.', '.', 'X', '.', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', '1', '.', '.', '.', '.', '.', 'X', '.', '.', 'X'],
      ['X', '.', '.', '1', 'X', '.', '.', 'X', '.', '.', 'X', '3', '.', 'x', 'X', 'X', 'X', '.', '.', '.', '.', '.', '.', '2', 'X'],
      ['X', '.', '.', 'X', 'X', 'X', '.', '2', '.', 'X', 'X', '.', '.', '.', '.', '.', '.', '.', 'X', '1', '.', 'X', 'X', 'X', 'X'],
      ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', '.', 'x', '.', '.', 'X', '2', '.', 'X', '.', '.', '.', '.', '.', 'X'],
      ['.', '.', 'R', '.', 'X', '.', '.', 'x', 'X', '.', '.', '.', 'X', '.', '.', 'X', 'X', 'X', 'X', 'X', 'X', '.', 'X', '.', '.'],
      ['X', 'X', 'X', '.', 'X', 'X', '.', 'X', 'X', '.', 'X', '.', 'X', '.', 'X', 'X', '.', '.', '.', '.', '.', '.', 'X', '.', 'X'],
      ['X', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'X', 'R', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '1', 'x', 'x', 'X'],
      ['X', '.', 'X', 'X', '.', 'X', 'X', 'X', '.', 'x', 'X', 'X', '.', '.', '.', '.', '1', 'X', 'X', '.', '.', 'X', 'X', 'X', 'X'],
      ['X', '.', 'x', 'X', '.', '3', 'X', '.', '.', '.', '.', '.', '.', '.', 'X', '.', 'X', 'X', '.', '.', '.', '.', '.', '.', 'X'],
      ['X', '3', '.', 'X', '.', '.', '.', '.', '1', '.', 'X', '1', '.', '.', 'X', 'R', '.', '.', '.', '.', 'X', '2', 'X', '3', 'X'],
      ['X', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', '.', 'X', 'X', 'X', 'X', 'X', 'X'],
    ]
  end

  def total_food
    Banana1 * 13 + Banana2 * 8 + Banana3 * 7 # = 750
  end

  def food_collected message, player
    player.food_points += message[:food]
    puts "player has #{player.food_points}"
    if player.food_points == total_food
      puts "WIN!!! all available food collected"
      save_points player
    end
  end

  def game_over message, player
    puts "GAME OVER!!! food collected: #{player.food_points}"
    save_points player
  end

  def save_points player
    if player.user.points < player.food_points
      player.user.points = player.food_points
      player.user.save!
    end
  end

end
