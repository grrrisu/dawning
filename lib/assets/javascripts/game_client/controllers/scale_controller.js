// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Game.ScaleController = (function() {
    function ScaleController(map) {
      this.map = map;
      this.animZoom = bind(this.animZoom, this);
      this.zoomOutAnim = bind(this.zoomOutAnim, this);
      this.zoomInAnim = bind(this.zoomInAnim, this);
      this.zoom = bind(this.zoom, this);
      this.zoomIn = bind(this.zoomIn, this);
      this.zoomOut = bind(this.zoomOut, this);
      this.bindEvents = bind(this.bindEvents, this);
      this.scale = 1.0;
      this.bindEvents();
    }

    ScaleController.prototype.bindEvents = function() {
      $('#zoom-in').on('click', this.zoomInAnim);
      return $('#zoom-out').on('click', this.zoomOutAnim);
    };

    ScaleController.prototype.zoomOut = function() {
      return this.zoom(this.scale - 0.1);
    };

    ScaleController.prototype.zoomIn = function() {
      return this.zoom(this.scale + 0.1);
    };

    ScaleController.prototype.zoom = function(scale) {
      this.scale = scale;
      return this.map.zoom(this.scale);
    };

    ScaleController.prototype.zoomInAnim = function() {
      return this.animZoom(-0.01, 10);
    };

    ScaleController.prototype.zoomOutAnim = function() {
      return this.animZoom(0.01, 10);
    };

    ScaleController.prototype.animZoom = function(step, counter) {
      if (counter > 0) {
        this.zoom(this.scale - step);
        return window.setTimeout(this.animZoom, 50, step, counter - 1);
      }
    };

    return ScaleController;

  })();

}).call(this);
