// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Game.MapDragHandler = (function() {
    function MapDragHandler(layer, map) {
      this.setDragable = bind(this.setDragable, this);
      this.dragMove = bind(this.dragMove, this);
      this.dragEnd = bind(this.dragEnd, this);
      this.dragStart = bind(this.dragStart, this);
      this.layer = layer;
      this.map = map;
      this.dragging = false;
      this.setDragable(true);
      this.layer.mousedown = this.dragStart;
      this.layer.touchstart = this.dragStart;
      this.layer.mouseup = this.dragEnd;
      this.layer.mouseupoutside = this.dragEnd;
      this.layer.touchend = this.dragEnd;
      this.layer.mousemove = this.dragMove;
      this.layer.touchmove = this.dragMove;
    }

    MapDragHandler.prototype.dragStart = function(event) {
      var position;
      this.dragging = true;
      position = event.data.getLocalPosition(this.layer.parent);
      this.dragStartX = position.x - this.layer.position.x;
      return this.dragStartY = position.y - this.layer.position.y;
    };

    MapDragHandler.prototype.dragEnd = function(event) {
      return this.dragging = false;
    };

    MapDragHandler.prototype.dragMove = function(event) {
      var position, x, y;
      if (this.dragging) {
        position = event.data.getLocalPosition(this.layer.parent);
        x = position.x - this.dragStartX;
        y = position.y - this.dragStartY;
        return this.map.mapMovedTo(x, y);
      }
    };

    MapDragHandler.prototype.setDragable = function(value) {
      return this.layer.interactive = value;
    };

    return MapDragHandler;

  })();

}).call(this);
