// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Game.ApiCaller = (function() {
    function ApiCaller(base_url) {
      this.base_url = base_url;
      this.request = bind(this.request, this);
      this.handle_error = bind(this.handle_error, this);
      this["delete"] = bind(this["delete"], this);
      this.put = bind(this.put, this);
      this.post = bind(this.post, this);
      this.get = bind(this.get, this);
      if (this.base_url == null) {
        this.base_url = window.location.protocol + '//' + window.location.host + window.location.pathname;
      }
    }

    ApiCaller.prototype.get = function(path, onsuccess) {
      return this.request(path, 'GET', null, onsuccess);
    };

    ApiCaller.prototype.post = function(path, data, onsuccess) {
      return this.request(path, 'POST', data, onsuccess);
    };

    ApiCaller.prototype.put = function(path, data, onsuccess) {
      return this.request(path, 'PUT', data, onsuccess);
    };

    ApiCaller.prototype["delete"] = function(path, onsuccess) {
      return this.request(path, 'DELETE', null, onsuccess);
    };

    ApiCaller.prototype.handle_error = function(jqXHR, textStatus, errorThrown) {
      if (jqXHR.status === 403) {
        return window.location.href = jqXHR.responseJSON.location;
      } else {
        return console.log("XHR ERROR: " + errorThrown + ', ' + textStatus);
      }
    };

    ApiCaller.prototype.request = function(path, type, data, onsuccess) {
      return $.ajax({
        url: this.base_url + path,
        type: type,
        data: data
      }).done(onsuccess).fail(this.handle_error);
    };

    return ApiCaller;

  })();

}).call(this);
